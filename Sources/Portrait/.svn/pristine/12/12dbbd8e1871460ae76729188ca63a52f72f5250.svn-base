<%@page import="org.iptime.madigun697.vo.Photo"%>
<%@page import="java.util.List"%>
<%@page import="org.codehaus.jackson.map.ObjectMapper"%>
<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<!DOCTYPE html>
<html>
<head>
<style type="text/css">
body {
	background: url('images/bgnoise.jpg') 50% 0 repeat fixed;
}

</style>
<meta charset="utf-8">
<style>
#map-canvas {
	height: 100%;
	margin: 0px;
	padding: 0px
}

.controls {
	margin-top: 16px;
	border: 1px solid transparent;
	border-radius: 2px 0 0 2px;
	box-sizing: border-box;
	-moz-box-sizing: border-box;
	height: 32px;
	outline: none;
	box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
}

#pac-input {
	background-color: #fff;
	padding: 0 11px 0 13px;
	width: 400px;
	font-family: Roboto;
	font-size: 15px;
	font-weight: 300;
	text-overflow: ellipsis;
}

#pac-input:focus {
	border-color: #4d90fe;
	margin-left: -1px;
	padding-left: 14px; /* Regular padding-left + 1. */
	width: 401px;
}

.pac-container {
	font-family: Roboto;
}

#type-selector {
	color: #fff;
	background-color: #4d90fe;
	padding: 5px 11px 0px 11px;
}

#type-selector label {
	font-family: Roboto;
	font-size: 13px;
	font-weight: 300;
}
}
</style>
<title>Places search box</title>
<script
	src="https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=places"></script>
<script>
	// This example adds a search box to a map, using the Google Place Autocomplete
	// feature. People can enter geographical searches. The search box will return a
	// pick list containing a mix of places and predicted search terms.

	function initialize() {

		var markers = [];
		var map = new google.maps.Map(document.getElementById('map-canvas'), {
			mapTypeId : google.maps.MapTypeId.ROADMAP
		});

		var defaultBounds = new google.maps.LatLngBounds(
				new google.maps.LatLng(37.8902, 126.1759),
				new google.maps.LatLng(37.8474, 126.2631));
		map.fitBounds(defaultBounds);

		// Create the search box and link it to the UI element.
		var input = /** @type {HTMLInputElement} */
		(document.getElementById('pac-input'));
		map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

		var searchBox = new google.maps.places.SearchBox(
		/** @type {HTMLInputElement} */
		(input));
		
		// [START region_getplaces]
		// Listen for the event fired when the user selects an item from the
		// pick list. Retrieve the matching places for that item.
		google.maps.event.addListener(searchBox, 'places_changed', function() {
			var places = searchBox.getPlaces();

			if (places.length == 0) {
				return;
			}
			for (var i = 0, marker; marker = markers[i]; i++) {
				marker.setMap(null);
			}

			
			
			
			
			
			
			
			
			
			// For each place, get the icon, place name, and location.
			markers = [];
			var bounds = new google.maps.LatLngBounds();
			for (var i = 0, place; place = places[i]; i++) {
				var image = {
					url : place.icon,
					size : new google.maps.Size(71, 71),
					origin : new google.maps.Point(0, 0),
					anchor : new google.maps.Point(17, 34),
					scaledSize : new google.maps.Size(25, 25)
				};

				// Create a marker for each place.
				var marker = new google.maps.Marker({
					map : map,
					icon : image,
					title : place.name,
					position : place.geometry.location
				});

				markers.push(marker);

				bounds.extend(place.geometry.location);
			}

			map.fitBounds(bounds);
		});
		// [END region_getplaces]
		
		
		
		
		

		// Bias the SearchBox results towards places that are within the bounds of the
		// current map's viewport.
		google.maps.event.addListener(map, 'bounds_changed', function() {
			var bounds = map.getBounds();
			searchBox.setBounds(bounds);
		});
		
		
		 var photoList1 = new Array();
	       <%
	      	ObjectMapper mapper = new ObjectMapper();
	     	 List<Photo> photoList1 = (List<Photo>)request.getAttribute("photoList");
	     
	     	 for(Photo photo : photoList1){	%>
	       		photoList1.push(JSON.parse('<%=mapper.defaultPrettyPrintingWriter().writeValueAsString(photo).replaceAll("\\p{Space}", "")%>'));
	   
	     <% 	}
	      %>

	      
	  
	  	for (var i = 0; i < photoList1.length; i++){
	  		//alert(photoList1[i].photoId);  
	    	  
	  	
	         var geo =  photoList1[i].geoTag.split(",");
	         var lat1= geo[0];
	         var lng1= geo[1];
	      
	       
	        
	         var contentString = '<div id="content">' + '<div id="siteNotice">'
	         + '</div>'
	         + '<h1 id="firstHeading" class="firstHeading">'+ photoList1[i].photoTitle+'</h1>'
	         + '<div id="bodyContent">'
	         + '<p><b>경도 : '+lat1+'위도 :'+ lng1+'</b>, Fs :'+ photoList1[i].fstop+' <b>꾸룩꾸룩</b>, 이사진은 '
	         + '태그명들을 가지고 있습니다. ' + '니가 하고 싶었던 이야기를 해봐.' + '</p>' + '<br>'
	         
	         + '<img width="200px" height = "200px" src="'+ photoList1[i].photoUrl+' ">' + '<a href=앨범 보는 주소로 바로가기.이건 모르겟음.아마 요고 앨범 아이디 넘겨주면 될듯.>관련 앨범보기</a></div>' + '</div>';
	         //alert(photoList1[i].photoUrl);
	       
	         
	         var image = {
	               url :  photoList1[i].photoUrl,
	               // This marker is 20 pixels wide by 32 pixels tall.
	               scaledSize : new google.maps.Size(50, 50),
	               // The origin for this image is 0,0.
	               origin : new google.maps.Point(0, 0),
	               // The anchor for this image is the base of the flagpole at 0,32.
	               anchor : new google.maps.Point(0, 32),
	         
	         		
	            };
	         
	         
	         var marker22 = new google.maps.Marker({
	            
	            position : new google.maps.LatLng( lat1, lng1),
	            animation : google.maps.Animation.BOUNCE,
	            icon : image,
	            map:map,
	            title: photoList1[i].photoTitle,
	            html : contentString
	         })
	         
	         var infowindow = new google.maps.InfoWindow({
	            width : 250,
	            height : 250
	         });

	         google.maps.event.addListener(marker22, 'click', function() {
	            infowindow.setContent(this.html);
	            infowindow.open(map, this);
	         });

	      }
		
		
		
		
	}

	google.maps.event.addDomListener(window, 'load', initialize);
</script>
<style>
#target {
	width: 345px;
}
</style>
</head>
<body>
<center>
	<div id="mapsView" style="width: 100%; height: 600px;">
		<input id="pac-input" class="controls" type="text"
			placeholder="Search Box">
		<div id="map-canvas" style="width: 100%; height: 100%;" ></div>
	</div>
<center>
</body>
</html>
